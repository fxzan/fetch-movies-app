{"version":3,"sources":["components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovies.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","onClick","onDelete","id","MovieList","deleteHandler","movies","map","key","AddMovies","React","useState","titleValue","setTitleValue","dateValue","setDateValue","textValue","setTextValue","isValid","setIsValid","onSubmit","event","preventDefault","trim","length","onAddMovie","htmlFor","type","value","onChange","target","App","setMovies","isLoading","setLoading","error","setError","retry","setRetry","init","setInit","fetchMoviesHandler","useCallback","a","console","log","fetch","response","ok","Error","status","json","data","loadedMovies","push","message","method","body","JSON","stringify","headers","useEffect","timer","setTimeout","clearTimeout","content","MoviesList","Fragment","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.29ad7591.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__1q4sM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__21l9n\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  function deleteHandler() {\n    props.onDelete(props.id);\n  }\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n      <button onClick={deleteHandler}>Delete</button>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  function deleteHandler(id) {\n    props.onDelete(id);\n  }\n  \n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          id={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n          onDelete={deleteHandler}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\r\nimport \"./AddMovies.css\";\r\n\r\nfunction AddMovies(props) {\r\n  const [titleValue, setTitleValue] = React.useState(\"\");\r\n  const [dateValue, setDateValue] = React.useState(\"\");\r\n  const [textValue, setTextValue] = React.useState(\"\");\r\n  const [isValid, setIsValid] = React.useState(true);\r\n\r\n  function addMovieHandler(event) {\r\n    event.preventDefault();\r\n    if (\r\n      titleValue.trim().length === 0 ||\r\n      dateValue.trim().length === 0 ||\r\n      textValue.trim().length === 0\r\n    ) {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n    props.onAddMovie({\r\n      title: titleValue,\r\n      openingText: textValue,\r\n      releaseDate: dateValue,\r\n    });\r\n      setTitleValue(\"\");\r\n      setDateValue(\"\");\r\n      setTextValue(\"\");\r\n      setIsValid(true);\r\n  }\r\n\r\n  function titleHandler(event) {\r\n    setTitleValue(event.target.value);\r\n  }\r\n\r\n  function dateHandler(event) {\r\n    setDateValue(event.target.value);\r\n  }\r\n\r\n  function textHandler(event) {\r\n    setTextValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addMovieHandler}>\r\n      <label htmlFor=\"form-title\">Title</label>\r\n      <input\r\n        id=\"form-title\"\r\n        type=\"text\"\r\n        value={titleValue}\r\n        onChange={titleHandler}\r\n      />\r\n      <label htmlFor=\"form-title\">Release Date</label>\r\n      <input\r\n        id=\"form-date\"\r\n        type=\"date\"\r\n        value={dateValue}\r\n        onChange={dateHandler}\r\n      />\r\n      <label htmlFor=\"form-text\">Opening Text</label>\r\n      <textarea\r\n        id=\"form-text\"\r\n        type=\"text\"\r\n        value={textValue}\r\n        onChange={textHandler}\r\n      />\r\n      {!isValid && <h3>Please fill in all the fields.</h3>}\r\n      <button type=\"submit\">Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovies;\r\n","import React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovies from \"./components/AddMovies\";\n\nfunction App() {\n  const [movies, setMovies] = React.useState([]);\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [retry, setRetry] = React.useState(false);\n  const [init, setInit] = React.useState(true);\n\n  const fetchMoviesHandler = React.useCallback(async () => {\n    console.log(\"Fetching Movies\");\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        \"https://react-movie-ee774-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\"\n      );\n\n      if (!response.ok) {\n        setRetry(true);\n        throw new Error(\n          \"Something Went Wrong! (Error: \" + response.status + \")\"\n        );\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (let key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }, []);\n\n  React.useEffect(() => {\n    if (init) {\n      setInit(false);\n      fetchMoviesHandler();\n    }\n\n    if (retry) {\n      var timer = setTimeout(() => {\n        console.log(\"Retry\");\n        fetchMoviesHandler();\n      }, 5000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [init, retry, error, fetchMoviesHandler]);\n\n  function cancelRetry() {\n    setRetry(false);\n  }\n\n  async function addMovieHandler(movie) {\n    try {\n      const response = await fetch(\n        \"https://react-movie-ee774-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(movie),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          \"Something Went Wrong! (Error: \" + response.status + \")\"\n        );\n      }\n\n      const data = await response.json();\n      console.log(data);\n      fetchMoviesHandler();\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  async function deleteMovieHandler(id) {\n      const response = await fetch(\n        `https://react-movie-ee774-default-rtdb.asia-southeast1.firebasedatabase.app/movies/${id}.json`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    \n    console.log(response);\n    \n      fetchMoviesHandler();\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (isLoading) content = <p>Loading...</p>;\n\n  if (error) content = <p>{error}</p>;\n\n  if (error && retry)\n    content = (\n      <>\n        <p>{error}</p>\n        <div>Retrying...</div>\n        <button onClick={cancelRetry}>Cancel</button>\n      </>\n    );\n\n  if (!isLoading && movies.length > 0) content = <MoviesList movies={movies} onDelete={deleteMovieHandler}/>;\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovies onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}